/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import dao.Dao;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Department;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author hp
 */
public class Batch extends javax.swing.JFrame {

    /**
     * Creates new form Batch
     */
    Dao depDao = new Dao();
    
    public Batch() {
        initComponents();
        
        populateTable();
    }
    private void populateTable(){
        final String[] COLUMNS={
            "ID", "Names", "Manager ID", "Location ID"
        };
        DefaultTableModel model= new DefaultTableModel(COLUMNS, 0);
        
        List<Department> depts = depDao.retrieveDepts();
        Iterator<Department> deptIter = depts.iterator();
        while(deptIter.hasNext()){
            Department dept = deptIter.next();
            
            String[] rowData={
                String.valueOf(dept.getId()), dept.getName(), String.valueOf(dept.getMangerId()), String.valueOf(dept.getLocationId())
            };
            model.addRow(rowData);
        }
        depTable.setModel(model);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        depTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Upload Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        depTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "ManagerId", "LocationId"
            }
        ));
        jScrollPane1.setViewportView(depTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addContainerGap(127, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        int response = fileChooser.showOpenDialog(null);
        
        if(response== JFileChooser.APPROVE_OPTION){
            try{
               File file = new File(fileChooser.getSelectedFile().getAbsolutePath());
               FileInputStream input = new FileInputStream(file);
               DataFormatter format = new DataFormatter();
               List<Department> departments = new ArrayList<>();
               
               XSSFWorkbook workbook = new XSSFWorkbook(input);
               XSSFSheet sheet = workbook.getSheetAt(0);
               Iterator<Row> rows = sheet.iterator();
               
               int rowsCount=0;
               while(rows.hasNext()){
                   Department department = new Department();
                   Row row = rows.next();
                   rowsCount++;
                   if(rowsCount>1){
                       int countCells=1;
                       Iterator<Cell> cells = row.cellIterator();
                       while(cells.hasNext()){
                           Cell cell = cells.next();
                           String cellValue = format.formatCellValue(cell);
                           switch(countCells){
                               case 1:
                                   department.setId(Integer.valueOf(cellValue));
                                   break;
                               case 2:
                                   department.setName(cellValue);
                                   break;
                               case 3:
                                   department.setMangerId(Integer.valueOf(cellValue));
                                   break;
                               case 4:
                                   department.setLocationId(Integer.valueOf(cellValue));
                                   break;
                           }
                           countCells++;
                       }
                       departments.add(department);                      
                   }
               }
               
               depDao.saveDept(departments);
               populateTable();
            }catch(Exception ex){
                 JOptionPane.showMessageDialog(null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "No file choosen");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Batch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Batch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Batch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Batch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Batch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable depTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
