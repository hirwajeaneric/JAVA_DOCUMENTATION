/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.StudentDao;

import model.ReadDataFromExcel;
import model.Student;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.File;
import java.io.IOException;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.VerticalAlignment;


/**
 *
 * @author hirwa
 */
public class ExportStudent extends javax.swing.JFrame {

    /**
     * Creates new form ExportStudent
     */
    public ExportStudent() {
        initComponents();
        updateTable();
        
    }
    
    public void updateTable(){
    
        DefaultTableModel model = (DefaultTableModel) StudentTable.getModel();
        model.setRowCount(0);
        
        StudentDao stdao = new StudentDao();
        List<Student> st = stdao.displayStudent();
        
        for(Student s: st){
            Object[] obj = {s.getId(), s.getName(), s.getAddress()}; 
            model.addRow(obj);
        }
        StudentTable.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        exportPdfButton = new javax.swing.JButton();
        ExportExcelButton = new javax.swing.JButton();
        ImportExcelButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        StudentTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Input Output");

        jLabel1.setText("Id");

        jLabel2.setText("Name");

        jLabel3.setText("Address");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        exportPdfButton.setText("ExportPdf");
        exportPdfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportPdfButtonActionPerformed(evt);
            }
        });

        ExportExcelButton.setText("ExportExcel");
        ExportExcelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportExcelButtonActionPerformed(evt);
            }
        });

        ImportExcelButton1.setText("ImportExcel");
        ImportExcelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportExcelButton1ActionPerformed(evt);
            }
        });

        StudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Table"
            }
        ));
        jScrollPane1.setViewportView(StudentTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(saveButton)
                            .addComponent(exportPdfButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ExportExcelButton)
                            .addComponent(ImportExcelButton1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(ImportExcelButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportPdfButton)
                    .addComponent(ExportExcelButton))
                .addGap(43, 43, 43))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exportPdfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportPdfButtonActionPerformed
       
        String path = "/home/hirwa/NetBeansProjects/04-Import-Export-Files/";
        JFileChooser pdfFile = new JFileChooser();
        pdfFile.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = pdfFile.showSaveDialog(this);
        if (x == JFileChooser.APPROVE_OPTION) {
            path = pdfFile.getSelectedFile().getPath();
        }
        Document doc = new Document();
        try {
            PdfWriter.getInstance(doc, new FileOutputStream(path + "myPdfFile.pdf"));
            doc.open();
            PdfPTable pdfTable = new PdfPTable(3);
            //adding header
            pdfTable.addCell("ID");
            pdfTable.addCell("NAME");
            pdfTable.addCell("ADDRESS");
            
            //looping the data from jtable to pdf
            for (int i = 0; i < StudentTable.getRowCount(); i++) {
                String id = StudentTable.getValueAt(i, 0).toString();
                String name = StudentTable.getValueAt(i, 1).toString();
                String address = StudentTable.getValueAt(i, 2).toString();
                
                pdfTable.addCell(id);
                pdfTable.addCell(name);
                pdfTable.addCell(address);
            }
            doc.add(pdfTable);
            JOptionPane.showMessageDialog(null, "Exported Successfully!!");

        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (DocumentException ex) {
            Logger.getLogger(ExportStudent.class.getName()).log(Level.SEVERE, null, ex);
        }
        doc.close();
    }//GEN-LAST:event_exportPdfButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        Student st = new Student();
        
        double ids = Double.parseDouble(idField.getText());
        st.setId(ids);
        st.setName(nameField.getText());
        st.setAddress(addressField.getText());
        
        StudentDao stdao = new StudentDao();
        stdao.saveStudent(st);
        updateTable();
        
        idField.setText("");
        nameField.setText("");
        addressField.setText("");
        
        JOptionPane.showMessageDialog(this, "Student Data Saved!!");
    }//GEN-LAST:event_saveButtonActionPerformed
    
    //This is method that calls the method that reads data from excell.
    private void ImportExcelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportExcelButton1ActionPerformed
        // TODO add your handling code here:
        ReadDataFromExcel rdfex = new ReadDataFromExcel();
        String[] args = null;
        try {
            ReadDataFromExcel.main(args);
        } catch (IOException ex) {
            Logger.getLogger(ExportStudent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ImportExcelButton1ActionPerformed

    private void ExportExcelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportExcelButtonActionPerformed
        // TODO add your handling code here:
        try {
            //Creating the sheet
            HSSFWorkbook workbook = new HSSFWorkbook();
            HSSFSheet sheet = workbook.createSheet("Sample");
            
            //Headings
            Row heading=sheet.createRow(0);
            heading.createCell(0).setCellValue("ID");
            heading.createCell(1).setCellValue("NAME");
            heading.createCell(2).setCellValue("ADDRESS");
            
            //Setting fonts and text alignment
            for(int i=0;i<=2;i++){
                CellStyle style=workbook.createCellStyle();
                Font font=workbook.createFont();
                font.setBold(true);
                font.setFontName(HSSFFont.FONT_ARIAL);
      
                style.setFont(font);
                style.setVerticalAlignment(VerticalAlignment.CENTER);
                heading.getCell(i).setCellStyle(style);
            }
            
            //Adding data to the table
            int r=1;
            
            StudentDao stdao = new StudentDao();
            Student st = new Student();
            
            for (Student t: stdao.findAll(st)) {
                Row row = sheet.createRow(r);
                
                Cell cellid = row.createCell(0);
                cellid.setCellValue(t.getId());
                
                Cell cellname = row.createCell(1);
                cellname.setCellValue(t.getName());
                
                Cell cellAddress = row.createCell(2);
                cellAddress.setCellValue(t.getAddress());
                
                r++;
            }
            
            for (int i=0; i<=2; i++){
                sheet.autoSizeColumn(i);
            }

            //Creating the file
            FileOutputStream out = new FileOutputStream(new File("/home/hirwa/NetBeansProjects/04-Import-Export-Files/StudentExcel.xlsx"));
            workbook.write(out);
            out.close();
            workbook.close();
            System.out.println("Well Done");    
            
            JOptionPane.showMessageDialog(this, "Successfully printed Excel file!");
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_ExportExcelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExportStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExportStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExportStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExportStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExportStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ExportExcelButton;
    private javax.swing.JButton ImportExcelButton1;
    private javax.swing.JTable StudentTable;
    private javax.swing.JTextField addressField;
    private javax.swing.JButton exportPdfButton;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
