
package MainPackage;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class ClientSideView extends javax.swing.JFrame {

    Socket client;
    public ClientSideView() {
        initComponents();
        sendButton.setEnabled(false);
    }
    
    private class ClientSide implements Runnable{
        int port;
        String host;
        String username;        
        public ClientSide(){
            try{             
              if(yourNameField.getText().trim().length()>2){
                  port = Integer.valueOf(portField.getText());
                  host=serverIPField.getText();
                  username=yourNameField.getText().trim();
                  portField.setEditable(false);
                  yourNameField.setEditable(false);
                  serverIPField.setEditable(false);
                  sendButton.setEnabled(true);
              }else{
                  JOptionPane.showMessageDialog(null, "Username cannot be empty!", "username validation", JOptionPane.WARNING_MESSAGE);
              }
              
            }catch(NumberFormatException ex){
               JOptionPane.showMessageDialog(null, "Provide a vlid port number", "Port number validation", JOptionPane.WARNING_MESSAGE);
            }
        }
        @Override
        public void run() {
            try {
                client = new Socket(host, port);               
                Thread listener = new Thread(new ServerHandler(client));
                listener.start();  
                PrintWriter out;
                try {
                    out = new PrintWriter(client.getOutputStream(), true);                    
                    out.println("@1User" + username);
                } catch (IOException ex) {
                    Logger.getLogger(ClientSideView.class.getName()).log(Level.SEVERE, null, ex);
                }            
                } catch (IOException ex) {
                    Logger.getLogger(ClientSideView.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        
        
    }
    private class ServerHandler implements Runnable{
        private Socket clientSocket;
        private BufferedReader in;
        public ServerHandler(Socket clientSocket) throws IOException{
           this.clientSocket= clientSocket;
           in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
        }

        @Override
        public void run() {
            try{
                String response;
                while(true){
                    response = in.readLine();
                    questionsTextPane.setText(questionsTextPane.getText() + response + "\n\n");
                }
            }catch(IOException ex){
                Logger.getLogger(ClientSideView.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                try {
                    clientSocket.close();
                } catch (IOException ex) {
                    Logger.getLogger(ClientSideView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        placeWirter = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        questionsTextPane = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        serverIPField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        yourNameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        portField = new javax.swing.JTextField();
        connectBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 0, 51));

        placeWirter.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        placeWirter.setText(" your answer....");
        placeWirter.setBorder(null);

        sendButton.setBackground(new java.awt.Color(0, 153, 153));
        sendButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sendButton.setForeground(new java.awt.Color(255, 255, 255));
        sendButton.setText("Send");
        sendButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 102), 1, true));
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        questionsTextPane.setEditable(false);
        questionsTextPane.setBorder(null);
        questionsTextPane.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jScrollPane1.setViewportView(questionsTextPane);

        jLabel1.setBackground(new java.awt.Color(0, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SERVER IP:");

        serverIPField.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        serverIPField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        serverIPField.setText("127.0.0.1");
        serverIPField.setBorder(null);

        jLabel2.setBackground(new java.awt.Color(0, 51, 51));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("YOUR USERNAME:");

        yourNameField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        yourNameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        yourNameField.setBorder(null);

        jLabel3.setBackground(new java.awt.Color(0, 51, 51));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("PORT:");

        portField.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        portField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        portField.setBorder(null);
        portField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portFieldActionPerformed(evt);
            }
        });

        connectBtn.setBackground(new java.awt.Color(0, 153, 153));
        connectBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        connectBtn.setForeground(new java.awt.Color(255, 255, 255));
        connectBtn.setText("Connect");
        connectBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 102), 1, true));
        connectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(placeWirter, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(serverIPField, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                .addComponent(yourNameField))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(114, 114, 114)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(portField, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(connectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serverIPField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(connectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(yourNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(placeWirter))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectBtnActionPerformed
        // TODO add your handling code here:
            try{             
              if(yourNameField.getText().trim().length()>2){
                  Integer.valueOf(portField.getText());
                  portField.setEditable(false);
                  yourNameField.setEditable(false);
                  serverIPField.setEditable(false);
                  sendButton.setEnabled(true);
                  connectBtn.setEnabled(false);
                  
                  Thread thread = new Thread(new ClientSide());
                  thread.start();
              }else{
                  JOptionPane.showMessageDialog(null, "Username cannot be empty!", "username validation", JOptionPane.WARNING_MESSAGE);
              }
              
            }catch(NumberFormatException ex){
               JOptionPane.showMessageDialog(null, "Provide a vlid port number", "Port number validation", JOptionPane.WARNING_MESSAGE);
            }
    }//GEN-LAST:event_connectBtnActionPerformed

    private void portFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portFieldActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        // TODO add your handling code here:
        PrintWriter out;
        try {
            out = new PrintWriter(client.getOutputStream(), true);
            questionsTextPane.setText(questionsTextPane.getText() + placeWirter.getText().trim());
            out.println(placeWirter.getText().trim());
        } catch (IOException ex) {
            Logger.getLogger(ClientSideView.class.getName()).log(Level.SEVERE, null, ex);
        }            
    }//GEN-LAST:event_sendButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientSideView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientSideView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientSideView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientSideView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientSideView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField placeWirter;
    private javax.swing.JTextField portField;
    private javax.swing.JTextPane questionsTextPane;
    private javax.swing.JButton sendButton;
    private javax.swing.JTextField serverIPField;
    private javax.swing.JTextField yourNameField;
    // End of variables declaration//GEN-END:variables
}
